name: AutAuto-publish release & update appcast

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Find installer EXE
        run: |
          echo "Looking for installer..."
          dir *.exe
          echo "::set-output name=INSTALLER::$(dir /b *.exe)"

      - name: Compute hash and size
        id: hash
        shell: pwsh
        run: |
          $exe = (Get-ChildItem *.exe | Select-Object -First 1).FullName
          $bytes = (Get-Item $exe).Length
          $hash = (Get-FileHash $exe -Algorithm SHA256).Hash
          echo "size=$bytes" >> $env:GITHUB_OUTPUT
          echo "sha256=$hash" >> $env:GITHUB_OUTPUT
          echo "exe=$exe" >> $env:GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.hash.outputs.exe }}
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body: "Automated release for ${{ github.ref_name }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update appcast.json
        shell: pwsh
        run: |
          $tag = "${{ github.ref_name }}"
          $ver = $tag.TrimStart('v')
          $url = "https://github.com/${{ github.repository }}/releases/download/$tag/$(Split-Path ${{ steps.hash.outputs.exe }} -Leaf)"
          $json = @{
            name = "Gemini Repricing"
            latest = $ver
            notes = "Auto release $ver"
            published = (Get-Date).ToString("s") + "Z"
            installer = @{
              url = $url
              size = [int]${{ steps.hash.outputs.size }}
              sha256 = "${{ steps.hash.outputs.sha256 }}"
            }
          } | ConvertTo-Json -Depth 5
          $path = "updates/appcast.json"
          $json | Out-File -Encoding utf8 $path
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add $path
          git commit -m "Update appcast for $ver"
          git push
